name: K6 Load Test

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - main

jobs:
  k6-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Fix permissions
        run: sudo chmod -R 777 /home/runner/work/cartesi-rollups-hl-graphql/cartesi-rollups-hl-graphql

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Trying use bake-action to build the images
      # - name: Build me
      #   uses: docker/bake-action@v5
      #   with:
      #     load: true
      #     targets: nonodo

      - name: Build and run PostgreSQL container
        run: |
          docker compose up --wait db

      - name: Install PostgreSQL Client
        run: sudo apt-get install -y postgresql-client

      - name: Wait for Postgres to be ready
        run: |
          echo "Waiting for postgres to be ready..."
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U myuser; then
              echo "Postgres is ready"
              break
            else
              echo "Postgres is unavailable - sleeping"
              sleep 1
            fi
          done

      - name: Build PostGraphile Docker image
        run: docker compose build db

      - name: Run PostGraphile service
        run: docker compose up --wait postgraphile

      - name: Wait for PostGraphile to be ready
        run: |
          for i in {1.60}; do
            curl -sSf http://localhost:5001 && break
            sleep 1
          done

      - name: Build cartesi-rollups-hl-graphql Docker image
        run: docker compose build app

      - name: Run cartesi-rollups-hl-graphql application
        run: |
          docker compose down
          docker compose up --wait app

      - name: Wait for cartesi-rollups-hl-graphql to be ready
        run: |
          for i in {1..60}; do
            curl -sSf http://localhost:8080/health && break
            sleep 1
          done

      - name: Get logs if cartesi-rollups-hl-graphql is not running
        run: |
          nonodo_state=$(docker compose ps --format '{{.State}}' app)
          if [ "$nonodo_state" != "running" ]; then
            echo "nonodo container logs:"
            docker compose logs app
          else
            echo "nonodo container is running"
          fi

          postgres_state=$(docker compose ps --format '{{.State}}' db)
          if [ "$postgres_state" != "running" ]; then
            echo "postgres container logs (last 100 lines):"
            docker compose logs --tail 100 db
            echo "postgres container inspect:"
            docker inspect $(docker compose ps --format "{{.Name}}" db)
          else
            echo "postgres container is running"
          fi

      - name: Install k6
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg software-properties-common
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://dl.k6.io/key.gpg | sudo gpg --dearmor -o /etc/apt/keyrings/k6-archive-keyring.gpg
          echo "deb [signed-by=/etc/apt/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install -y k6

      - name: Run k6 tests
        id: k6
        run: |
          docker compose logs
          docker ps
          k6 run loadtesting/test.js
          docker compose logs app
      - name: Get cartesi-rollups-hl-graphql logs
        if: ${{ always() }}
        id: docker-compose-logs
        run: |
          docker compose logs

      - name: Teardown Docker containers
        run: docker compose down --rmi all --volumes --remove-orphans
